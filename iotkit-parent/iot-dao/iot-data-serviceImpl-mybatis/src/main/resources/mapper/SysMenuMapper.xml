<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.iotkit.data.mapper.SysMenuMapper">

    <select id="selectMenuPermsByRoleId" resultType="java.lang.String">
        SELECT COUNT(DISTINCT A.perms)
        FROM sys_menu A
        LEFT JOIN sys_role_menu B ON A.id = B.menu_id
        WHERE A.status ='0'
        AND B.role_id = #{roleId}
    </select>

    <select id="selectMenuTreeByUserId" resultType="cc.iotkit.data.model.TbSysMenu">
        SELECT A.id, A.parent_id AS parentId, A.menu_name AS menuName, A.path, A.component, A.query_param AS queryParam,
        A.visible, A.status, A.perms, A.is_frame AS isFrame,
        A.is_cache AS isCache, A.menu_type AS menuType, A.icon, A.order_num AS orderNum, A.create_time AS createTime
        FROM sys_menu A
        LEFT JOIN sys_role_menu B ON A.id = B.menu_id
        LEFT JOIN sys_user_role C ON B.role_id = C.role_id
        LEFT JOIN sys_role D ON C.role_id = D.id
        LEFT JOIN sys_user E ON C.user_id = E.id
        <where>
            <if test="userId != null">
                AND E.id = #{userId}
            </if>
            AND A.menu_type IN ('M', 'C')
            AND A.status = '0'
            AND D.status = '0'
        </where>
        ORDER BY A.parent_id ASC, A.order_num ASC
    </select>
    <select id="selectMenuPermsByUserId" resultType="java.lang.String">
        SELECT A.perms
        FROM sys_menu A
        LEFT JOIN sys_role_menu B ON A.id = B.menu_id
        LEFT JOIN sys_user_role C ON B.roleId = C.roleId
        LEFT JOIN sys_role D ON C.roleId = D.id
        WHERE C.userId = #{userId}
        AND A.status = '0'
        AND D.status = '0'
    </select>

    <select id="selectMenuList" resultType="cc.iotkit.data.model.TbSysMenu">
        SELECT A.id, A.parent_id AS parentId, A.menu_name AS menuName, A.path, A.component, A.query_param AS queryParam,
        A.visible, A.status, A.perms, A.is_frame AS isFrame,
        A.is_cache AS isCache, A.menu_type AS menuType, A.icon, A.order_num AS orderNum, A.create_time AS createTime
        FROM sys_menu A
        LEFT JOIN sys_role_menu B ON A.id = B.menu_id
        LEFT JOIN sys_user_role C ON B.role_id = C.role_id
        LEFT JOIN sys_role D ON C.role_id = D.id
        WHERE C.user_id = #{userId}
        <if test="menu.menuName !=null and menu.menuName!=''">
            AND A.menu_name LIKE CONCAT('%',#{menu.menuName},'%')
        </if>
        <if test="menu.status !=null and menu.status!=''">
            AND A.status = #{menu.status}
        </if>
        <if test="menu.visible !=null and menu.visible!=''">
            AND A.visible = #{menu.visible}
        </if>
        ORDER BY A.parent_id ASC, A.order_num ASC
    </select>

    <select id="listParentIdByRoleId" resultType="java.lang.Long">
        SELECT * FROM sys_menu A
        INNER JOIN sys_role_menu B ON A.id = B.menu_id
        WHERE B.role_id = #{roleId}
    </select>

    <select id="selectMenuListByRoleId" resultType="java.lang.Long">
        SELECT * FROM sys_menu A
        INNER JOIN sys_role_menu B ON A.id = B.menu_id
        WHERE B.role_id = #{parentRoleId}
        <if test="menuCheckStrictly and roleIds != null and roleIds.size() > 0 ">
            AND A.id NOT IN
            <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
                #{roleId}
            </foreach>
        </if>
        ORDER BY A.parent_id ASC, A.order_num ASC
    </select>

</mapper>
